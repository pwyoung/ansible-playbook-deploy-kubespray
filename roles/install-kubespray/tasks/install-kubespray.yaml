#TODO: Move some of these to ../defaults/
- name: Set some facts
  set_fact:
    hosts_yml: "{{ hosts_yml }}"
    ansible_playbook: "{{ ansible_playbook }}"
    ansible_extra_vars_file: "{{ kubespray_user_dir }}/extra_vars.yaml"    
    kubespray_dir: "{{ kubespray_user_dir }}/kubespray"
    kubespray_create_cluster_cmd: "{{ ansible_playbook }} -i {{ hosts_yml }} --become --become-user=root cluster.yml"
    kubespray_create_cluster_script: "{{ kubespray_user_dir }}/create-cluster.sh"
    kubespray_create_cluster_log: "{{ kubespray_user_dir }}/create-cluster.log"
  vars:
    ansible_playbook: "/usr/local/bin/ansible-playbook"
    hosts_yml: "{{ kubespray_user_dir }}/kubespray/inventory/mycluster/hosts.yml"

- name: Read the local build/extra_vars.yaml file
  debug: msg="the value of foo.txt is {{lookup('file', '/tmp/x') }}"
    
# Put build_ansible_extra_vars into a file so we can use it
#- name: Copy our local Ansible extra_vars.yaml
#  copy:
#    content: "{{ build_ansible_extra_vars | default('') | to_nice_yaml }}"
#    dest: "{{ ansible_extra_vars_file }}"
#    mode: 0600

- name: BAIL
  fail: msg="STOP HERE"

- name: Install SSH config file
  template:
    src: templates/ssh/config.j2
    dest: "{{ kubespray_user_dir }}/.ssh/config"
    mode: '0644'
  
- name: Install Kubespray Git Repo
  git:
    repo: "{{ kubespray_repo }}"
    dest: "{{ kubespray_user_dir }}/kubespray"
    version: "{{ kubespray_version }}"
    force: yes
  
- name: Install Kubespray Python requirements
  become: yes
  pip:
    requirements: "{{ kubespray_user_dir }}/kubespray/requirements.txt"
    executable: "pip3"

- name: Copy Sample Config files
  command: "cp -rfp {{ src }} {{ dest }}"
  vars:
    src: "{{ kubespray_user_dir }}/kubespray/inventory/sample"
    dest: "{{ kubespray_user_dir }}/kubespray/inventory/mycluster"

- name: Install Kubespray inventory file
  template:
    src: templates/inventory/hosts.yml.j2
    dest: "{{ hosts_yml }}"
    mode: '0700'

- name: Create a script to create the cluster
  copy:
    content: "cd {{ kubespray_dir }} && (time {{ kubespray_create_cluster_cmd }}) &> /dev/stdout | tee {{ kubespray_create_cluster_log }}"
    dest: "{{ kubespray_create_cluster_script }}"
    mode: 0744
    
- name: Run Kubespray
  shell: "sh -x {{ kubespray_create_cluster_script }}"
  register: result

- name: Show Kubespray results
  debug:
    msg: "{{ result }}"
