---

- name: Get pyenv version
  shell: "{{ kubespray_user_home }}/.pyenv/shims/python --version | cut -d' ' -f 2"
  register: result
  ignore_errors: yes
  tags:
    - SKIP

- name: Instally Python via pyenv
  include_role:
    name: pyenv.io.lab
  vars:
    pyenv_environments:
      - "{{ kubespray_pyenv_version }}"
    pyenv_global: "{{ kubespray_pyenv_version }}"
    pyenv_path: "{{ kubespray_user_home }}/.pyenv"
    conf_script: "{{ kubespray_user_home }}/.bashrc"
    pyenv_repo: "{{ kubespray_pyenv_repo }}"
  when: result.stdout != kubespray_pyenv_version
  tags:
    - SKIP

- name: Install Kubespray repo release
  git:
    repo: "{{ kubespray_repo }}"
    dest: "{{ kubespray_user_home }}/kubespray"
    version: "{{ kubespray_version }}"
    force: yes
  tags:
    - SKIP

- name: Install PIP requirements
  pip:
    requirements: "{{ kubespray_user_home }}/kubespray/requirements.txt"
    executable: "{{ kubespray_user_home }}/.pyenv/shims/pip"
  tags:
    - SKIP

- name: Create Cluster dirs
  file:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars"
    state: directory
    mode: 0700
  tags:
    - SKIP

- name: Install Kubespray inventory file
  template:
    src: templates/inventory/hosts.ini.j2
    dest: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/hosts.ini"
    mode: '0700'
  tags:
    - SKIP

- name: Install SSH config file
  template:
    src: templates/ssh/config.j2
    dest: "{{ kubespray_user_home }}/.ssh/config"
    mode: '0644'
  tags:
    - SKIP

- name: Install script to destroy the cluster
  copy:
    src: files/destroy-cluster.sh
    dest: "{{ kubespray_user_home }}/destroy-cluster.sh"
    mode: 0700
  tags:
    - SKIP

################################################################################
# Define Kubespray variables
################################################################################
# Notes:
# - This block sets Kubespray variables by copying the sample group_vars/*yml
#   files and editing them.
# - This is done because the variable list changes from Kubespray version to
#   version. If we templatize this file, and variables are added or removed,
#   then we'll miss new variables that are added (or fail to retire some).
#   For example, a variable was added to tell Kubespray to use kubeadm.
#   This is also done to preserve comments in the original files.
# - Do not override variables in the ansible-playbook call below.
#   In a long-lived cluster, it's quite possible someone will run a playbook
#   manually on the master node (e.g. to add or remove nodes).
#   If that is done, and the variables (e.g. cluster_name or k8s version)
#   are different then there could be huge impacts.

# /group_vars/

- name: Install Kubespray Ansible group_vars/etcd.yml file
  shell: "cp {{ src }} {{ dest }}"
  vars:
    src: "{{ kubespray_user_home }}/kubespray/inventory/sample/group_vars/etcd.yml"
    dest: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/etcd.yml"
  tags:
    - TEST

# /group_vars/all/
- name: Create config dir {{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/all
  file:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/all"
    state: directory
    mode: 0700
  tags:
    - TEST

- name: Install Kubespray Ansible group_vars/all/all.yml file
  shell: "cp {{ src }} {{ dest }}"
  vars:
    src: "{{ kubespray_user_home }}/kubespray/inventory/sample/group_vars/all/all.yml"
    dest: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/all/all.yml"
  tags:
    - TEST

- name: Install Kubespray Ansible group_vars/all/docker.yml file
  shell: "cp {{ src }} {{ dest }}"
  vars:
    src: "{{ kubespray_user_home }}/kubespray/inventory/sample/group_vars/all/docker.yml"
    dest: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/all/docker.yml"
  tags:
    - TEST

# /group_vars/k8s-cluster/
- name: Create config dir {{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster
  file:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster"
    state: directory
    mode: 0700
  tags:
    - TEST

- name: Install Kubespray Ansible group_vars/k8s-cluster/addons.yml file
  shell: "cp {{ src }} {{ dest }}"
  vars:
    src: "{{ kubespray_user_home }}/kubespray/inventory/sample/group_vars/k8s-cluster/addons.yml"
    dest: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/addons.yml"
  tags:
    - TEST

- name: Install Kubespray Ansible group_vars/k8s-cluster/k8s-cluster.yml file
  shell: "cp {{ src }} {{ dest }}"
  vars:
    src: "{{ kubespray_user_home }}/kubespray/inventory/sample/group_vars/k8s-cluster/k8s-cluster.yml"
    dest: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml"
  tags:
    - TEST

- name: Install Kubespray Ansible group_vars/k8s-cluster/k8s-net-calico.yml file
  shell: "cp {{ src }} {{ dest }}"
  vars:
    src: "{{ kubespray_user_home }}/kubespray/inventory/sample/group_vars/k8s-cluster/k8s-net-calico.yml"
    dest: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/k8s-net-calico.yml"
  tags:
    - TEST

#
# EDIT FILES
#

- name: Customize Kubespray variables | dns_cores_per_replica=256
  lineinfile:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml"
    line: "dns_cores_per_replica: {{ kubespray_dns_cores_per_replica }}"
    regexp: '^(\s)*dns_cores_per_replica:'
  tags:
    - TEST

- name: Customize Kubespray variables | dns_nodes_per_replica=16
  lineinfile:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml"
    line: "dns_nodes_per_replica: {{ kubespray_dns_nodes_per_replica }}"
    regexp: '^(\s)*dns_nodes_per_replica:'
  tags:
    - TEST

- name: Customize Kubespray variables | populate_inventory_to_hosts_file=false
  lineinfile:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml"
    line: "kube_proxy_mode: {{ kubespray_kube_proxy_mode }}"
    regexp: '^(\s)*kube_proxy_mode:'
  tags:
    - TEST

- name: Customize Kubespray variables | populate_inventory_to_hosts_file=false
  lineinfile:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml"
    line: "populate_inventory_to_hosts_file: false"
    regexp: '^(\s)*populate_inventory_to_hosts_file:'
  tags:
    - TEST

- name: Customize Kubespray variables | dns_mode={{ kubespray_dns_mode }}
  lineinfile:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml"
    line: "dns_mode: {{ kubespray_dns_mode }}"
    regexp: '^(\s)*dns_mode:'
  tags:
    - TEST

- name: Customize Kubespray variables | cluster_name={{ cluster_name }}
  lineinfile:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml"
    line: "cluster_name: {{ cluster_name }}"
    regexp: '^(\s)*cluster_name:'
  tags:
    - TEST

- name: Customize Kubespray variables | kube_network_plugin={{ kubespray_kube_network_plugin }}
  lineinfile:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml"
    line: "kube_network_plugin: {{ kubespray_kube_network_plugin }}"
    regexp: '^(\s)*kube_network_plugin:'
  tags:
    - TEST

- name: Customize Kubespray variables | helm_enabled=true
  lineinfile:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/addons.yml"
    line: "helm_enabled: true"
    regexp: '^(\s)*helm_enabled:'
  tags:
    - TEST

- name: Customize Kubespray variables | local_volume_provisioner_enabled={{ kubespray_local_volume_provisioner_enabled }}
  lineinfile:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/addons.yml"
    line: "local_volume_provisioner_enabled: {{ kubespray_local_volume_provisioner_enabled }}"
    regexp: '^(\s)*local_volume_provisioner_enabled:'
  tags:
    - TEST

- name: Customize Kubespray variables | helm_version={{ kubespray_helm_version }}
  lineinfile:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml"
    line: "helm_version: {{ kubespray_helm_version }}"
    regexp: '^(\s)*helm_version:'
  tags:
    - TEST

- name: Customize Kubespray variables | ingress_nginx_enabled={{ kubespray_ingress_nginx_enabled }}
  lineinfile:
    path: "{{ kubespray_user_home }}/kubespray/inventory/mycluster/group_vars/k8s-cluster/addons.yml"
    line: "ingress_nginx_enabled: {{ kubespray_ingress_nginx_enabled }}"
    regexp: '^(\s)*ingress_nginx_enabled:'
  tags:
    - TEST

################################################################################
# Run the Kubespray Ansible Playbook to install the cluster
################################################################################

- name: Run Ansible-Playbook to install K8S
  shell: "{{ kubespray_user_home }}/.pyenv/shims/ansible-playbook -b -i inventory/mycluster/hosts.ini cluster.yml | tee {{ kubespray_user_home }}/run.log"
  args:
    chdir: "{{ kubespray_user_home }}/kubespray"
  tags:
    - TEST

